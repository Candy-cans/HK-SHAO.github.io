<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HK-SHAO</title>
  
  <subtitle>Shao&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-24T13:40:16.316Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>王家晔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建立个人Blog和使用LaTeX写文章</title>
    <link href="http://yoursite.com/2019/01/24/%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BAblog%E5%92%8C%E4%BD%BF%E7%94%A8Latex%E5%86%99%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2019/01/24/建立个人blog和使用Latex写文章/</id>
    <published>2019-01-24T07:30:11.000Z</published>
    <updated>2019-01-24T13:40:16.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于建站"><a href="#关于建站" class="headerlink" title="关于建站"></a>关于建站</h2><p>感谢开源的世界，这个博客的二级域名和文件存储都靠GitHub，这个博客的引擎靠的是Hexo，而这个博客的主题是开源的NexT，如果没有他们，我不可能搭建起这个博客。<br>GitHub：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>Hexo：<a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a><br>NexT主题：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a><br>虽然耗了我整整一天时间，但总的来说，这次建站非常轻松，也是多亏了开源世界。<br><a id="more"></a><br><img src="https://raw.githubusercontent.com/HK-SHAO/HK-SHAO.github.io/master/images/blog/2.PNG" alt="">   </p><h2 id="关于-LaTeX"><a href="#关于-LaTeX" class="headerlink" title="关于 LaTeX"></a>关于 LaTeX</h2><p>在博客里写文章，用的是MarkDown和 $\LaTeX$ ， $\LaTeX$ 主要是用于书写数学式子的，说到这个 $\LaTeX$ ，它是全世界非常著名的文字排版系统，尤其是对数学式子的排版，大量学术论文的排版都靠它，理工的大学生应该会用到它来写论文。<br><img src="https://raw.githubusercontent.com/HK-SHAO/HK-SHAO.github.io/master/images/blog/1.PNG" alt=""><br>说个实话吧，在电脑上书写数学式子太累了，可能是我还不熟练吧。<br>以后我的blog都会发布在这个网站上，大家可以收藏，感谢支持！  </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于建站&quot;&gt;&lt;a href=&quot;#关于建站&quot; class=&quot;headerlink&quot; title=&quot;关于建站&quot;&gt;&lt;/a&gt;关于建站&lt;/h2&gt;&lt;p&gt;感谢开源的世界，这个博客的二级域名和文件存储都靠GitHub，这个博客的引擎靠的是Hexo，而这个博客的主题是开源的NexT，如果没有他们，我不可能搭建起这个博客。&lt;br&gt;GitHub：&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/&lt;/a&gt;&lt;br&gt;Hexo：&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hexo.io/&lt;/a&gt;&lt;br&gt;NexT主题：&lt;a href=&quot;https://github.com/theme-next/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/theme-next/hexo-theme-next&lt;/a&gt;&lt;br&gt;虽然耗了我整整一天时间，但总的来说，这次建站非常轻松，也是多亏了开源世界。&lt;br&gt;
    
    </summary>
    
    
      <category term="公告" scheme="http://yoursite.com/tags/%E5%85%AC%E5%91%8A/"/>
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的不等式结论</title>
    <link href="http://yoursite.com/2019/01/24/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%BB%93%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/01/24/一个简单的不等式结论/</id>
    <published>2019-01-24T04:02:08.000Z</published>
    <updated>2019-01-24T13:40:16.316Z</updated>
    
    <content type="html"><![CDATA[<p>这个不等式结论是19/1/13写关于圆锥曲线求线段比值最大值时发现的。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>设 $m,n,a,b&gt;0$ </p><p>若 $x&gt;y$ 则  </p><script type="math/tex; mode=display">\frac{ma^2+nb^2+xab}{ma^2+nb^2+yab} \leqslant \frac{2\sqrt{mn}+x}{2\sqrt{mn}+y}</script><p>若 $x&lt;y$ 则  </p><script type="math/tex; mode=display">\frac{ma^2+nb^2+xab}{ma^2+nb^2+yab} \geqslant \frac{2\sqrt{mn}+x}{2\sqrt{mn}+y}</script><a id="more"></a><h2 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h2><script type="math/tex; mode=display">\frac{ma^2+nb^2+xab}{ma^2+nb^2+yab} = 1+\frac{x-y}{\frac{ma}{b}+\frac{nb}{a}+y}</script><p>然后分类讨论 $x$ 与 $y$ 的大小关系，利用基本不等式可以得到以上结论。  </p><h2 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h2><p>若实数 $x,y$ 满足 $4x^2-5xy+4y^2=5$ ，则 $x^2+y^2$ 的最大值为多少？</p><p>由以上结论可得  </p><script type="math/tex; mode=display">\frac{4x^2+4y^2}{4x^2+4y^2-5xy} \leqslant \frac{2\sqrt{4 \times 4}+0}{2\sqrt{4 \times 4}-5} = \frac{8}{3}</script><p>即  </p><script type="math/tex; mode=display">\frac{4(x^2+y^2)}{5} \leqslant \frac{8}{3}</script><p>故  </p><script type="math/tex; mode=display">x^2+y^2 \leqslant \frac{10}{3}</script><h2 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h2><p>若实数 $x,y$ 满足 $x^2+y^2+xy=1$ ，则 $x+y$ 的最大值为多少？  </p><p>由以上结论可得  </p><script type="math/tex; mode=display">x+y \leqslant  \sqrt{x^2+y^2+2xy} = \sqrt{\frac{x^2+y^2+2xy}{x^2+y^2+xy}} \leqslant \sqrt{\frac{2+2}{2+1}}=\frac{2\sqrt{3}}{3}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个不等式结论是19/1/13写关于圆锥曲线求线段比值最大值时发现的。&lt;/p&gt;
&lt;h2 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;设 $m,n,a,b&amp;gt;0$ &lt;/p&gt;
&lt;p&gt;若 $x&amp;gt;y$ 则  &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\frac{ma^2+nb^2+xab}{ma^2+nb^2+yab} \leqslant \frac{2\sqrt{mn}+x}{2\sqrt{mn}+y}&lt;/script&gt;&lt;p&gt;若 $x&amp;lt;y$ 则  &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\frac{ma^2+nb^2+xab}{ma^2+nb^2+yab} \geqslant \frac{2\sqrt{mn}+x}{2\sqrt{mn}+y}&lt;/script&gt;
    
    </summary>
    
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="不等式" scheme="http://yoursite.com/tags/%E4%B8%8D%E7%AD%89%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>猪的晚餐</title>
    <link href="http://yoursite.com/2018/10/02/%E7%8C%AA%E7%9A%84%E6%99%9A%E9%A4%90/"/>
    <id>http://yoursite.com/2018/10/02/猪的晚餐/</id>
    <published>2018-10-02T02:23:53.000Z</published>
    <updated>2019-01-25T06:50:41.541Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/HK-SHAO/HK-SHAO.github.io/master/images/blog/3.PNG" alt="">  </p><p>&emsp;&emsp;一座酒店座落在临海的悬崖边，夜晚只有一间房间的灯是亮的，房间内明亮庄雅，有几头猪坐在餐椅上，他们穿戴整洁，彬彬有礼，正优雅的享受着餐桌上的美味。这时，一只瘦弱的黑猫跑到一头猪的身下，凄惨的叫着，猪看了他一眼，将盘子中的剩菜丢给了黑猫，黑猫立马将剩菜藏了起来，独自享受。<br><a id="more"></a><br>&emsp;&emsp;当餐桌上的菜肴越来越少，一个厨子推着一个机器走了过来，他将房间内的花瓶、壁画拿了下来，丢进机器内，机器冒着黑烟，美味佳肴就从机器另一边的传送带出来。厨子将这些菜肴送上餐桌，餐桌前的猪就这样一直的吃着。越来越多瘦弱的猫过来了，他们都在猪的身下凄惨的叫着，一头猪丢下几个丸子在地上，瘦弱的猫们便奋力争抢，甚至打斗起来。</p><p>&emsp;&emsp;当房间里珍贵的物品都被机器消耗后，厨子做出的菜肴越来越少，餐桌前的猪们坐不住了，他们显得没那么优雅了，甚至连餐桌上的礼仪都忘记了。房间里的猫们饿坏了，他们围着餐桌转圈，但没有猪理他们。猫们凄惨的叫着，一头猪拿出一个玩具老鼠，上好发条放在地上，玩具老鼠在地上跑吸引了很多猫的注意，猪们不停地吃着。</p><p>&emsp;&emsp;房间里的物品差不多被机器消耗完了，厨子几乎做不出多少菜肴了，餐桌前的猪彻底按捺不住了，他们开始急躁的在餐桌上争抢菜肴，甚至有的直接把菜盘归自己所有，他们便开始争抢菜盘，菜盘里有一个丸子掉在地上，丸子穿过桌布滚到了餐桌底下，一只猫追随丸子，穿过桌布，钻进餐桌底下，当他看到猪们的腿被铁链复杂的缠绕在一起时，铁链上的锁头化为巨蟒的模样，将这只猫吞噬了。</p><p>&emsp;&emsp;房间的墙壁都被厨子扒下，塞进机器做菜肴了，可是从机器传送带出来的只有空盘子。餐桌前的猪们都在用餐具敲桌子，以示厨子赶快上菜，但厨子无奈地摇了摇头。猪们急了，他们开始争抢桌上的空盘子，然后不顾一切的舔着空盘子，甚至把空盘子咬碎吃掉，猫们也很急，他们使劲撩着桌布，甚至跳到餐桌上，与猪争抢菜盘子。</p><p>&emsp;&emsp;猪们见状非常愤怒，拿起猫就把他往地上摔，猫们反抗着，集体跳到桌上，化为一只猛虎，愤怒的嚎叫，然后扑向一个穿着法袍的猪，撕扯咬碎，鲜血溅到任何一个角落，地上一片血肉模糊，其他的猪同样遭到这样的命运。血腥过后，猛虎困了，在餐桌上的血泊中睡着了。</p><p>&emsp;&emsp;厨子抱着头，恐惧的躲在机器后面，他见猛虎睡着了，拿起锋利的匕首，悄悄走到猛虎面前，向猛虎脖子刺去，猛虎一命呜呼，厨子划开猛虎的肚皮，从中拿出了几只小猫，离开这个空旷而又破烂的房间，走进了一个新的房间，房间内又是那么明亮庄雅，厨子放下小猫们，小猫们走向餐桌，化为几只猪，坐在餐桌上，餐桌上都是美味佳肴，厨子拿出一个箱子，将箱子中的餐具分给了猪们。</p><p>&emsp;&emsp;这几头猪坐在餐椅上，他们穿戴整洁，彬彬有礼，正优雅的享受着餐桌上的美味……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/HK-SHAO/HK-SHAO.github.io/master/images/blog/3.PNG&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;一座酒店座落在临海的悬崖边，夜晚只有一间房间的灯是亮的，房间内明亮庄雅，有几头猪坐在餐椅上，他们穿戴整洁，彬彬有礼，正优雅的享受着餐桌上的美味。这时，一只瘦弱的黑猫跑到一头猪的身下，凄惨的叫着，猪看了他一眼，将盘子中的剩菜丢给了黑猫，黑猫立马将剩菜藏了起来，独自享受。&lt;br&gt;
    
    </summary>
    
    
      <category term="杂文" scheme="http://yoursite.com/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>利用OpenGL实现规划寻找目标函数极值可视化</title>
    <link href="http://yoursite.com/2018/10/01/%E5%88%A9%E7%94%A8OpenGL%E5%AE%9E%E7%8E%B0%E8%A7%84%E5%88%92%E5%AF%BB%E6%89%BE%E7%9B%AE%E6%A0%87%E5%87%BD%E6%95%B0%E6%9E%81%E5%80%BC%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>http://yoursite.com/2018/10/01/利用OpenGL实现规划寻找目标函数极值可视化/</id>
    <published>2018-10-01T14:21:40.000Z</published>
    <updated>2019-01-24T13:40:16.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>最近一段时间在学校学完了简单的线性规划，今天放假闲着于是就花了一点时间把之前用OpenGL实现的函数图像绘制修改成了线性规划的绘图，并且能实现目标函数极值寻找的可视化。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-4591d5f3a5bb75bd.gif?imageMogr2/auto-orient/strip" alt=""></p><p>如图这是实现了寻找 $z = x^2 + y^2$ 的最大值的效果<br><a id="more"></a><br><img src="https://upload-images.jianshu.io/upload_images/15006683-6d9f06aac5bfb5c3.gif?imageMogr2/auto-orient/strip" alt=""></p><p>这是实现了寻找 $z = 2x + y$ 的最大值。  </p><p><img src="https://upload-images.jianshu.io/upload_images/15006683-2b694e6f2ff5886f.gif?imageMogr2/auto-orient/strip" alt=""></p><p>当然，非线性的规划也是很容易的，这是寻找 $z = x^3 + y^2$ 的最大值。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-7c058e47e786c547.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>Func函数定义你要绘制的二元不等式组，Target函数定义你要寻找极值的目标函数，Color函数一般不用修改，具体我没时间细说了。  </p><h2 id="演示地址"><a href="#演示地址" class="headerlink" title="演示地址"></a>演示地址</h2><p>（非）线性规划：<br><a href="https://www.shadertoy.com/view/Mt3fz8" target="_blank" rel="noopener">https://www.shadertoy.com/view/Mt3fz8</a><br>函数图像绘制：<br> <a href="https://www.shadertoy.com/view/llcfR8" target="_blank" rel="noopener">https://www.shadertoy.com/view/llcfR8</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;最近一段时间在学校学完了简单的线性规划，今天放假闲着于是就花了一点时间把之前用OpenGL实现的函数图像绘制修改成了线性规划的绘图，并且能实现目标函数极值寻找的可视化。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-4591d5f3a5bb75bd.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图这是实现了寻找 $z = x^2 + y^2$ 的最大值的效果&lt;br&gt;
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="OpenGL" scheme="http://yoursite.com/tags/OpenGL/"/>
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>如何比较整点的大小（排序）？</title>
    <link href="http://yoursite.com/2018/09/30/%E5%A6%82%E4%BD%95%E6%AF%94%E8%BE%83%E6%95%B4%E7%82%B9%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%88%E6%8E%92%E5%BA%8F%EF%BC%89%EF%BC%9F/"/>
    <id>http://yoursite.com/2018/09/30/如何比较整点的大小（排序）？/</id>
    <published>2018-09-30T10:13:52.000Z</published>
    <updated>2019-01-25T12:22:14.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提问"><a href="#提问" class="headerlink" title="提问"></a>提问</h2><p>当我知道复数是无法比较大小的时候，我就怀疑这个命题了，如果我能从复数映射到实数，并且从实数映射到复数：  </p><script type="math/tex; mode=display">\mathbb{C}\rightarrow\mathbb{R}\\ \mathbb{R}\rightarrow\mathbb{C}</script><p>也就是任意的复数都有一个实数与之一一对应，那我就可以利用实数的性质将所有复数进行排序了，这就可以比较复数大小了。我们知道复数可以与平面上的点一一对应，经过我的思考，我想了一个办法，利用等速螺线：  </p><p><img src="https://pic1.zhimg.com/v2-daf26fd7ab7ecda7f06c548ec7aedecc_b.jpg" alt="">  </p><p>如图，从原点出发，沿着螺旋线运动，我们用不等号做记号，排序先到达的点和后到达的点，如图是先到达 $A$ 点，后到达 $B$ 点，也就是 $A&lt;B$ ，这样我就可以将螺旋线上的所有点排序了。  </p><p>但当我仔细思考，平面上点是稠密的，如果我想排序所有的点，那螺旋线就得无限密集，这显然是做不到的。  </p><p><img src="https://pic1.zhimg.com/v2-6ab660499f3c16c8e0d96b342d7598a0_b.jpg" alt="">  </p><p>我又开始思考，既然平面上的所有点无法排序，那平面上的整点能否排序呢？<br>我第一时间想到的当然还是螺旋，不过是方形的螺旋：  </p><p><img src="https://pic1.zhimg.com/v2-c3c4f3b29d037afcc0f23fa148dc7d48_b.jpg" alt="">  </p><p>如图，这样我就可以用方形的螺旋线顺次将平面内所有的整点连接，从原点出发，按照先后顺序将所有的整点映射到整数（整数就是从原点出发沿着方形螺旋线运动的路程）。如图 $A (0, 0)\rightarrow 0 ， B (1, 0) \rightarrow 1 ， E (-1, -1) \rightarrow 6$ 。所有的整数与平面上的整点一一对应，也就可以将所有整点排序了，$D$ 在 $E$ 的前面，这里可以用记号表示 $D&lt;E$ ，也就是 $(-1,1)&lt;(-1,-1)$ 。  </p><p>如果整点用复数 $x+yi$ 表示，整数用 $z$ 表示，其中 $x,y,z\in\mathbb{Z}$ ，那么函数 $f(x+yi)=z$ 和其反函数 $f^{-1}(z)=x+yi$ 的映射关系是什么呢？如何用表达式表示它们呢？  </p><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>As your wish:<br><img src="https://pic1.zhimg.com/v2-50b50f74c758312dc7be263ff8205e38_r.jpg" alt="">  </p><p>points on x-axes: </p><script type="math/tex; mode=display">f_x(n)=4 n^2-\left| n\right| -2 n</script><p>points on y-axes: </p><script type="math/tex; mode=display">f_y(n)=4 n^2+\left| n\right| -2 n</script><p><br>  </p><script type="math/tex; mode=display">x+yi\rightarrow f_{\max(x,y)}(\max(x,y))\mp\min(x,y)</script><p>The inverse function will be more complicated:  </p><script type="math/tex; mode=display">x_n=\sum _{i=1}^n \sin \left(\frac{ \pi}{2}  (\left\lfloor \sqrt{4 i-3}\right\rfloor  \bmod 4)\right)</script><script type="math/tex; mode=display">y_n=-\sum _{i=1}^n \cos \left(\frac{ \pi}{2}  (\left\lfloor \sqrt{4 i-3}\right\rfloor  \bmod 4)\right)</script><script type="math/tex; mode=display">n\rightarrow (x_n,y_n)</script><p><img src="https://pic2.zhimg.com/v2-815b59f4b26f6f15a70815dd81de8215_r.jpg" alt="">  </p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>解答来自知乎   <a href="https://www.zhihu.com/question/296719713/answer/501579029" target="_blank" rel="noopener">https://www.zhihu.com/question/296719713/answer/501579029</a> ——<br>酱紫君</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;提问&quot;&gt;&lt;a href=&quot;#提问&quot; class=&quot;headerlink&quot; title=&quot;提问&quot;&gt;&lt;/a&gt;提问&lt;/h2&gt;&lt;p&gt;当我知道复数是无法比较大小的时候，我就怀疑这个命题了，如果我能从复数映射到实数，并且从实数映射到复数：  &lt;/p&gt;
&lt;script type
      
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="Mathematica" scheme="http://yoursite.com/tags/Mathematica/"/>
    
  </entry>
  
  <entry>
    <title>游戏与意义</title>
    <link href="http://yoursite.com/2018/08/27/%E6%B8%B8%E6%88%8F%E4%B8%8E%E6%84%8F%E4%B9%89/"/>
    <id>http://yoursite.com/2018/08/27/游戏与意义/</id>
    <published>2018-08-27T06:52:54.000Z</published>
    <updated>2019-01-24T12:35:32.196Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;小时候十分迷恋电脑游戏，以至于只要父母不在，就偷偷打开电脑玩游戏。我玩过很多游戏，最早是还在上幼儿园中班时，路过电玩俱乐部，我哭闹着要求父亲带我进去玩赛车游戏。后来我在父亲电脑里发现了某个射击游戏，迷恋这个游戏的我，经常连饭都不吃，父亲一气之下把电脑中的游戏全删了。我至今为止还记得电脑前额头流着汗珠的父亲打开WindowsXP中的搜索狗搜索已被他删除的游戏，和站在一旁满脸泪花，嚎啕大哭的我。<br><a id="more"></a><br>&emsp;&emsp;仔细想来我从真正迷恋游戏到放弃游戏大概是3年时间，而我玩过的游戏却数不胜数，这其中包括了无数网页小游戏，网游，端游，独立游戏。也不知为什么，从什么时候起，我突然对游戏不感兴趣了，我觉得大概是五年级左右吧，我小时候内向，没什么朋友，也不经常与朋友出去玩，而喜欢在网络上探索一些东西，当我接触了很多游戏和软件，这时我对游戏是如何开发出来的，软件是怎么制作的有了一定的兴趣。于是我接触了RPG游戏制作软件RPG Maker XP和编程，并一步步的深入了解编程。看到这里你应该知道，我因为对一些我认为更有趣的东西——编程，软件技术所吸引，我认为这些东西更酷，更有意义，便对游戏索然无味了。</p><p>&emsp;&emsp;前些日子我沦落了，因为我没有在网络上寻找有知识，有技术含量的东西，而再次沦入游戏世界，我在手机上下载了PUBG Mobile玩了大概一个星期，每次玩这个游戏都是因为我不知道我要干什么，只好打发时间了。有时我突然在游戏中醒来，我问我自己：你在做什么？我告诉我自己：玩游戏不过是我内心的空虚，没有任何意义。我便毅然卸载游戏，但这却解决不了根本问题，没过多久，我便再把游戏安装，这样滑稽的事情至少发生5次了。我应该明白，解决这个根本问题的方法应该是重拾那些自己觉得酷，有知识含量，有技术含量的东西，去探索它们，才能解决内心的空虚，对知识渴望。</p><p>&emsp;&emsp;我不喜欢游戏，但游戏并没有错，它是时代产物，它有巨大的商业价值，它有它存在的意义，现代的社会缺少它甚至无法正常运转，但我不能对热爱游戏的人产生偏见，热爱游戏的人也不要对热爱技术的我产生偏见，它只不过是不同的人的不同兴趣罢了，都有存在的价值，都值得每个人尊重。</p><p>&emsp;&emsp;我这个人喜欢分享，我会把我学来的，新奇的，有知识和技术的东西分享给别人，所以我在高中，经常会拉我的朋友过来让他听我讲那些我自认为酷的东西。这些东西包括了哲学，计算机学，算法学，几何学，数学，物理学，化学，数字电路等等，当然只是其中一些很浅薄的内容。你或许认为我是个理科狂人，我不否认，但事实上我兴趣面很广，除此之外我还喜欢政治，历史和地理，并且我还喜欢音乐和创作音乐。我总感觉我像沙滩上的男孩，时不时低头捡起贝壳，看看然后把它扔掉，时不时又抬头看看大海，远眺晴空，而不像海盗那样挖掘宝藏，驶船征服大海。</p><p>&emsp;&emsp;当我还在初三时，我就会跟我的朋友滔滔不绝的讲量子力学，量子纠缠，波函数，波坍塌，不确定性原理等等。当我们学到三角恒等变换的时候，我便兴奋的讲如何利用复变函数找到sin(x)=2的根，当学到数列的时候，我便激动的讲如何求出斐波那契数列的通项公式，当学到向量时，我便会喜悦的讲如何用向量外积秒杀某些数学题。当我学到苯的时候，我便欢快的讲离域大π键。我举的例子似乎过多，但实质上不止这些，我只是想证明我是个求知欲很强，并喜欢分享这些知识的人。这样做的后果无疑会让一些人认为我很会装逼，但我也无可奈何。</p><p>&emsp;&emsp;我尝试与朋友分享这些东西的时候，他们有时会问一个很经典的问题：这有什么意义呢？我知道这是一个反问句，其实说明了他对我所分享的东西不感兴趣甚至不屑。有时我心中或许会有一丝恼怒和不解，即便这些东西不会出考题，即便它对我们的生活似乎没什么用处，但它的确是知识，这些知识潜移默化的改变着我们，是有意义的，或者对我来说就是很酷的！同时我也应该反思：我何必与一个对这些东西不感兴趣的人分享这些呢？换位思考，假如一个人突然涛涛不绝的与我聊某游戏，某皮肤，某服装，某武器时，或许我也一样，反问他一句：这有什么意义呢？不同的人不同的兴趣，再正常不过了，需要的是理解，而不是偏见。</p><p>&emsp;&emsp;总之，在生活学习中，不要反问别人做一件事有什么意义，因为这本身就是一件可笑又无意义的事情。在未来，现实之下，人生当中应该多懂一些道理，多遇一些有趣的人。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;小时候十分迷恋电脑游戏，以至于只要父母不在，就偷偷打开电脑玩游戏。我玩过很多游戏，最早是还在上幼儿园中班时，路过电玩俱乐部，我哭闹着要求父亲带我进去玩赛车游戏。后来我在父亲电脑里发现了某个射击游戏，迷恋这个游戏的我，经常连饭都不吃，父亲一气之下把电脑中的游戏全删了。我至今为止还记得电脑前额头流着汗珠的父亲打开WindowsXP中的搜索狗搜索已被他删除的游戏，和站在一旁满脸泪花，嚎啕大哭的我。&lt;br&gt;
    
    </summary>
    
    
      <category term="杂文" scheme="http://yoursite.com/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL着色器（Shader）和GLSL语言的简单介绍</title>
    <link href="http://yoursite.com/2018/08/26/OpenGL%E7%9D%80%E8%89%B2%E5%99%A8%EF%BC%88Shader%EF%BC%89%E5%92%8CGLSL%E8%AF%AD%E8%A8%80%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2018/08/26/OpenGL着色器（Shader）和GLSL语言的简单介绍/</id>
    <published>2018-08-26T13:11:26.000Z</published>
    <updated>2019-01-25T06:55:36.160Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在Android上发现一个开源软件，叫做ShaderEditor（着色编辑器），可以用它编写GLSL程序并且预览，还能与Android内置变量联系（电量，陀螺仪，磁力，触摸，等等），还可以将效果作用于桌面壁纸，非常酷炫，在深入了解之后认识了OpenGL和GLSL（Graphics Library Shader Language）<br>开源地址：<a href="https://github.com/markusfisch/ShaderEditor" target="_blank" rel="noopener">https://github.com/markusfisch/ShaderEditor</a><br>这里我展示了用这个编辑器编写的3D河豚，3D海浪，火焰，生命游戏（元胞自动机）  </p><p><img src="https://upload-images.jianshu.io/upload_images/15006683-a80eea48a8314986.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><a id="more"></a><br><img src="https://upload-images.jianshu.io/upload_images/15006683-c0be9f388da276d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/15006683-087864e6d5fb3d38.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/15006683-59197f34589becad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="什么是OpenGL？"><a href="#什么是OpenGL？" class="headerlink" title="什么是OpenGL？"></a>什么是OpenGL？</h2><p>OpenGL（全写Open Graphics Library）是指定义了一个跨编程语言、跨平台的编程接口规格的专业的图形程序接口。它用于三维图像（二维的亦可），是一个功能强大，调用方便的底层图形库。  </p><p>OpenGL™ 是行业领域中最为广泛接纳的 2D/3D 图形 API，其自诞生至今已催生了各种计算机平台及设备上的数千优秀应用程序。OpenGL™ 是独立于视窗操作系统或其它操作系统的，亦是网络透明的。在包含CAD、内容创作、能源、娱乐、游戏开发、制造业、制药业及虚拟现实等行业领域中，OpenGL™ 帮助程序员实现在 PC、工作站、超级计算机等硬件设备上的高性能、极具冲击力的高视觉表现力图形处理软件的开发。——百度百科  </p><h2 id="什么是Shader？"><a href="#什么是Shader？" class="headerlink" title="什么是Shader？"></a>什么是Shader？</h2><p>着色器（Shader）是用来实现图像渲染的，用来替代固定渲染管线的可编辑程序。其中Vertex Shader主要负责顶点的几何关系等的运算，Pixel Shader主要负责片源颜色等的计算。  </p><p>着色器替代了传统的固定渲染管线，可以实现3D图形学计算中的相关计算，由于其可编辑性，可以实现各种各样的图像效果而不用受显卡的固定渲染管线限制。  </p><h2 id="什么是GLSL？"><a href="#什么是GLSL？" class="headerlink" title="什么是GLSL？"></a>什么是GLSL？</h2><p>OpenGL着色语言（OpenGL Shading Language）是用来在OpenGL中着色编程的语言，也即开发人员写的短小的自定义程序，他们是在图形卡的GPU （Graphic Processor Unit图形处理单元）上执行的，代替了固定的渲染管线的一部分，使渲染管线中不同层次具有可编程性。比如：视图转换、投影转换等。GLSL（GL Shading Language）的着色器代码分成2个部分：Vertex Shader（顶点着色器）和Fragment（片断着色器），有时还会有Geometry Shader（几何着色器）。负责运行顶点着色的是顶点着色器。它可以得到当前OpenGL 中的状态，GLSL内置变量进行传递。GLSL其使用C语言作为基础高阶着色语言，避免了使用汇编语言或硬件规格语言的复杂性。  </p><h2 id="GLSL简单实例分析"><a href="#GLSL简单实例分析" class="headerlink" title="GLSL简单实例分析"></a>GLSL简单实例分析</h2><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#ifdef GL_FRAGMENT_PRECISION_HIGH</span></span><br><span class="line"><span class="keyword">precision</span> <span class="keyword">highp</span> <span class="type">float</span>;</span><br><span class="line"><span class="meta">#else</span></span><br><span class="line"><span class="keyword">precision</span> <span class="keyword">mediump</span> <span class="type">float</span>;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line"> <span class="comment">//上面是预编译，如果设备支持就使用高精度模式（更高精度的浮点运算），否则使用低精度模式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec2</span> resolution;</span><br><span class="line"> <span class="comment">//只读的全局变量，是一个二维浮点向量，表示当前设备的分辨率</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main(<span class="type">void</span>)</span><br><span class="line"> <span class="comment">//用于着色的主函数</span></span><br><span class="line">&#123;</span><br><span class="line">true<span class="type">vec2</span> uv = <span class="built_in">gl_FragCoord</span>.xy / resolutionCoord.xy<span class="comment">//当前着色像素坐标与设备分辨率的比值</span></span><br><span class="line">true<span class="type">vec4</span> wave_color = <span class="type">vec4</span>(uv, <span class="number">1.0</span>, <span class="number">1.0</span>);<span class="comment">//uv设置了当前像素的红绿（RG）程度，蓝色（B）程度固定为1.0,透明度（A）固定为1.0</span></span><br><span class="line">true<span class="built_in">gl_FragColor</span> = wave_color;<span class="comment">//将颜色（一个四维向量）赋值给gl_FragColor，这是设置当前像素颜色的固定写法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到GLSL语言风格与C语言非常相似，上手比较容易。<br>二维浮点向量<code>vec2 vec</code>相当于C语言中的数组<code>float vec[2]</code>。<br>事实上GLSL也支持数组，如<code>vec2 vec[2]</code>相当于C语言中的二维数组<code>float vec[2][2]</code></p><h2 id="OpenGL学习网站"><a href="#OpenGL学习网站" class="headerlink" title="OpenGL学习网站"></a>OpenGL学习网站</h2><p>OpenGL学习网站——<a href="https://learnopengl-cn.github.io/" target="_blank" rel="noopener">https://learnopengl-cn.github.io/</a></p><h2 id="OpenGL深度介绍博客"><a href="#OpenGL深度介绍博客" class="headerlink" title="OpenGL深度介绍博客"></a>OpenGL深度介绍博客</h2><p>OpenGL深度介绍博客——<a href="http://www.twinklingstar.cn/category/opengl/" target="_blank" rel="noopener">http://www.twinklingstar.cn/category/opengl/</a></p><h2 id="GLSL中文手册"><a href="#GLSL中文手册" class="headerlink" title="GLSL中文手册"></a>GLSL中文手册</h2><p>GLSL中文手册——<a href="https://blog.csdn.net/hk_shao/article/details/82084274" target="_blank" rel="noopener">https://blog.csdn.net/hk_shao/article/details/82084274</a></p><h2 id="GLSL程序展示"><a href="#GLSL程序展示" class="headerlink" title="GLSL程序展示"></a>GLSL程序展示</h2><p>效果参见本文开头图片</p><ul><li>3D河豚鱼——<a href="https://blog.csdn.net/hk_shao/article/details/82084361" target="_blank" rel="noopener">https://blog.csdn.net/hk_shao/article/details/82084361</a></li><li>火焰效果——<a href="https://blog.csdn.net/hk_shao/article/details/82084411" target="_blank" rel="noopener">https://blog.csdn.net/hk_shao/article/details/82084411</a></li><li>3D海洋——<a href="https://blog.csdn.net/hk_shao/article/details/82084448" target="_blank" rel="noopener">https://blog.csdn.net/hk_shao/article/details/82084448</a></li><li>生命游戏（元胞自动机）——<a href="https://blog.csdn.net/hk_shao/article/details/82084481" target="_blank" rel="noopener">https://blog.csdn.net/hk_shao/article/details/82084481</a>  </li></ul><h2 id="国外着色器（Shader）源码分享网站"><a href="#国外着色器（Shader）源码分享网站" class="headerlink" title="国外着色器（Shader）源码分享网站"></a>国外着色器（Shader）源码分享网站</h2><p>Shadertoy——<a href="https://www.shadertoy.com/" target="_blank" rel="noopener">https://www.shadertoy.com/</a>  </p><h3 id="以上，本文结束"><a href="#以上，本文结束" class="headerlink" title="以上，本文结束"></a>以上，本文结束</h3><h5 id="本文章大部分内容来自网络，本人只是整理和简要说明，方便大家。"><a href="#本文章大部分内容来自网络，本人只是整理和简要说明，方便大家。" class="headerlink" title="本文章大部分内容来自网络，本人只是整理和简要说明，方便大家。"></a>本文章大部分内容来自网络，本人只是整理和简要说明，方便大家。</h5>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在Android上发现一个开源软件，叫做ShaderEditor（着色编辑器），可以用它编写GLSL程序并且预览，还能与Android内置变量联系（电量，陀螺仪，磁力，触摸，等等），还可以将效果作用于桌面壁纸，非常酷炫，在深入了解之后认识了OpenGL和GLSL（Graphics Library Shader Language）&lt;br&gt;开源地址：&lt;a href=&quot;https://github.com/markusfisch/ShaderEditor&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/markusfisch/ShaderEditor&lt;/a&gt;&lt;br&gt;这里我展示了用这个编辑器编写的3D河豚，3D海浪，火焰，生命游戏（元胞自动机）  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-a80eea48a8314986.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="OpenGL" scheme="http://yoursite.com/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>向量外积的高中数学运用</title>
    <link href="http://yoursite.com/2018/06/16/%E5%90%91%E9%87%8F%E5%A4%96%E7%A7%AF%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E8%BF%90%E7%94%A8/"/>
    <id>http://yoursite.com/2018/06/16/向量外积的高中数学运用/</id>
    <published>2018-06-16T14:43:20.000Z</published>
    <updated>2019-01-24T15:39:52.219Z</updated>
    
    <content type="html"><![CDATA[<p>向量积，数学中又称外积、叉积，物理中称矢积、叉乘，是一种在向量空间中向量的二元运算。与点积不同，它的运算结果是一个向量而不是一个标量。并且两个向量的叉积与这两个向量和垂直。其应用十分广泛，通常应用于物理学光学和计算机图形学中。<br>如图，这是 $(2, 4) × (3, 0) = -12$ ，我们得到了一个实数 $-12$ ，而其绝对值为平行四边形面积。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-b7aafc478f85d9d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a><br>如图，这是 $(1, 0, 0) × (2, 4, 0) = (0, 0, 4)$ ，我们得到了一个垂直与已知两向量的法向量，且其模长为平行四边形面积。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-bccfdcde8bae7164.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><h2 id="运算定理"><a href="#运算定理" class="headerlink" title="运算定理"></a>运算定理</h2><p>$\vec{a},b$ 均为向量，$θ$ 为 $\vec{a},b$ 的夹角   </p><p>1，$\qquad\vec{a}\times \vec{b}=|\vec{a}| \times |\vec{b}|sinθ$  </p><p>2，$\qquad\vec{a}\times \vec{b}=(l,m,n) \times (o,p,q)=(mq-np,no-lq,lp-mo)$  </p><p>3，$\qquad\vec{a}\times \vec{b}=-(\vec{b} \times \vec a)$  </p><h2 id="运用1，已知三点坐标，求三角形面积"><a href="#运用1，已知三点坐标，求三角形面积" class="headerlink" title="运用1，已知三点坐标，求三角形面积"></a>运用1，已知三点坐标，求三角形面积</h2><p>以任意一个点坐标为基准，做差得到两个向量，这两个向量可围成向量三角形<br>例如点 $A (a, b, c)$ ，点 $B (d, e, f)$ ，点 $C (g, h, i)$<br>得到向量 $\vec{p} = (d - a, e - b, f - c)$ 和 $\vec{q} = (g - a, h - b, i - c)$<br>使用公式2，然后取绝对值，得到三角形面积 $S = | \vec{p} \times \vec{q} | / 2$  </p><p>空间向量外积求三角形面积可以很容易的推广到平面  </p><p>令 </p><script type="math/tex; mode=display">\ n = 0，q = 0</script><p>则有 </p><script type="math/tex; mode=display">\vec{a} ×\vec{b}= (l, m, 0) × (o, p, 0) = (0, 0, lp - mo)</script><p>故 </p><script type="math/tex; mode=display">S =  |\vec{a}×\vec{b}| / 2 = | lp - mo | / 2</script><p><em>三角形是最简单的几何图形，而在计算机领域求多边形面积是非常重要的，而用向量外积算出的有向面积，是解决求多边形面积的重要方法，它适用于凸多边形和凹多边形，非常灵活，简洁优美。</em>  </p><h2 id="运用2，已知平面，求平面的法向量"><a href="#运用2，已知平面，求平面的法向量" class="headerlink" title="运用2，已知平面，求平面的法向量"></a>运用2，已知平面，求平面的法向量</h2><p>找到平面内不共线的两向量 $\vec a,\vec b$ ，这两个向量决定了这个平面<br>使用公式2，得到向量 $\vec c$ ，按照向量外积的定义，$\vec c$ 垂直于 $\vec a,\vec b$<br>故所求向量 $\vec c$ 即平面的法向量  </p><p><em>向量外积得到的法向量，有很多用途，尤其是物理上的，例如3D图像渲染在CG和游戏领域非常重要，而好的视觉效果多半取决于环境光的仿真，光的传播有一个最基本的定理，那就是光线与平面的法线所成的反射角等于入射角，而与利用向量外积求平面法线，是最简洁优美的。</em></p><h2 id="运用3，求三棱锥体积"><a href="#运用3，求三棱锥体积" class="headerlink" title="运用3，求三棱锥体积"></a>运用3，求三棱锥体积</h2><p>由三个不共面向量 $\vec{a},\vec{b},\vec{c}$ 所决定的平行六面体的体积为  </p><script type="math/tex; mode=display">V=|\vec{a} \cdot ({\vec{b} \times} \vec{c})|=|\vec{b} \cdot ({\vec{a} \times} \vec{c})|=|\vec{c} \cdot ({\vec{a} \times} \vec{b})|</script><p>故由三个不共面向量所决定的三棱锥的体积为 $V/6$</p><h2 id="运用4，高中数学外挂"><a href="#运用4，高中数学外挂" class="headerlink" title="运用4，高中数学外挂"></a>运用4，高中数学外挂</h2><p>用它来做高中数学题简直就是开挂。</p><p>已知三点坐标，求三角形面积这个问题。按照高中数学的套路，无非就是两点间距离公式算三边长，然后要么用海伦公式算面积，要么用余弦定理求出余弦值，换成正弦值，再求面积，这两种方法海伦公式稍微简便一点，但无非都难算了一些。而使用向量外积则简洁优美，我直接算 $|\vec{a}×\vec{b}| / 2$ 的值就是面积了。</p><p>已知平面，求平面的法向量这个问题。按照高中数学的套路，无非找出平面内两个不共线向量 $\vec a,\vec b$ ，然后设平面的法向量 $\vec{c} = (x, y, z)$ 然后根据向量垂直 $\vec{c} \cdot\vec{a}= 0$ 和 $\vec{c} \cdot\vec{b}= 0$ 联立解得 $x,y,z$ 为含参的式子(因为一个平面的法向量有无数个)，最后取一个容易计算的法向量。而使用向量外积，那就很简单了，计算 $\vec{a} × \vec b$ 就搞定了。</p><p>已知三棱锥的各个点坐标，求它的体积这个问题。按照高中数学的套路，无非就是用余弦定理和正弦定理暴算一个面的面积，再用向量的余弦定理暴算点到面的距离，然后求出体积。如果使用上述的公式，一步就能算出体积，非常方便。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;向量积，数学中又称外积、叉积，物理中称矢积、叉乘，是一种在向量空间中向量的二元运算。与点积不同，它的运算结果是一个向量而不是一个标量。并且两个向量的叉积与这两个向量和垂直。其应用十分广泛，通常应用于物理学光学和计算机图形学中。&lt;br&gt;如图，这是 $(2, 4) × (3, 0) = -12$ ，我们得到了一个实数 $-12$ ，而其绝对值为平行四边形面积。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-b7aafc478f85d9d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="高中" scheme="http://yoursite.com/tags/%E9%AB%98%E4%B8%AD/"/>
    
  </entry>
  
  <entry>
    <title>Python-函数绘图及函数图像微分与积分</title>
    <link href="http://yoursite.com/2018/04/29/Python-%E5%87%BD%E6%95%B0%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%87%BD%E6%95%B0%E5%9B%BE%E5%83%8F%E5%BE%AE%E5%88%86%E4%B8%8E%E7%A7%AF%E5%88%86/"/>
    <id>http://yoursite.com/2018/04/29/Python-函数绘图及函数图像微分与积分/</id>
    <published>2018-04-29T06:28:25.000Z</published>
    <updated>2019-01-25T11:59:50.721Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在学校太闲，就写了这个程序，可以绘制函数图像，并且可以绘制其导函数图像和不定积分的图像，效果非常不错。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/15006683-8f6ccbeb41b1195b.gif?imageMogr2/auto-orient/strip" alt=""><br><a id="more"></a></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>1，程序无法绘制复数图像，若函数返回一个复数，将自动取模作为函数值进行绘制。<br>2，函数的表达式支持Python所有内置函数和math库，time库，random库的函数（要求函数返回的是数字）。<br>3，@(“g(x)”)和$(“g(x)”)是g(x)的导函数和不定积分的固定格式，其中g(x)是被微函数的表达式或者被积函数的表达式，”g(x)”或者’g(x)’表示它是个表达式而不是数字，若不加引号将无法正常微积分。<br>4，具体使用方法请看效果图，并理解代码。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.x</span></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.pencolor(random(), random(), random())</span><br><span class="line">    <span class="keyword">global</span> n, sf</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    sf = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>  n &gt; width / (<span class="number">-2</span> * zoom):</span><br><span class="line">        f = evale(express, n)</span><br><span class="line">        drawf(n, f)</span><br><span class="line">        n -= (<span class="number">1</span> / zoom)</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    sf = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>  n &lt; width / (<span class="number">2</span> * zoom):</span><br><span class="line">        f = evale(express, n)</span><br><span class="line">        drawf(n, f)</span><br><span class="line">        n += (<span class="number">1</span> / zoom)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawf</span><span class="params">(n, f)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> <span class="keyword">or</span> isnan(f.real):</span><br><span class="line">        turtle.penup()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        turtle.pendown()</span><br><span class="line">    <span class="keyword">if</span> isnan(f.real):</span><br><span class="line">        f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n.imag != <span class="number">0</span>:</span><br><span class="line">        f = abs(f)</span><br><span class="line">    <span class="keyword">if</span> hight / -zoom &lt; f.real &lt; hight / zoom:</span><br><span class="line">        turtle.goto(n * zoom, f.real * zoom)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawxy</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.clear()</span><br><span class="line">    turtle.pencolor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.goto(width / <span class="number">-2</span>, <span class="number">0</span>)</span><br><span class="line">    turtle.goto(width / <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">    turtle.goto(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    turtle.goto(<span class="number">0</span>, hight / <span class="number">2</span>)</span><br><span class="line">    turtle.goto(<span class="number">0</span>, hight / <span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">format</span><span class="params">(s)</span>:</span></span><br><span class="line">    s = s.replace(<span class="string">"^"</span>,<span class="string">"**"</span>)</span><br><span class="line">    s = s.replace(<span class="string">"@"</span>,<span class="string">"differentiate"</span>)</span><br><span class="line">    s = s.replace(<span class="string">"$"</span>,<span class="string">"integral"</span>)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evale</span><span class="params">(s, n)</span>:</span></span><br><span class="line">    x = n</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> eval(s)</span><br><span class="line">    <span class="keyword">except</span> BaseException:</span><br><span class="line">        <span class="keyword">return</span> nan</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">differentiate</span><span class="params">(s)</span>:</span></span><br><span class="line">    dx = <span class="number">0.1</span> / zoom</span><br><span class="line">    f1 = evale(s, n)</span><br><span class="line">    df = evale(s, n + dx) - f1</span><br><span class="line">    <span class="keyword">return</span> df / dx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">integral</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> sf</span><br><span class="line">    dx = copysign(<span class="number">1</span> / zoom, n)</span><br><span class="line">    f1 = evale(s, n)</span><br><span class="line">    df = (f1 + evale(s, n + dx)) / <span class="number">2</span></span><br><span class="line">    sf = sf + df * dx</span><br><span class="line">    <span class="keyword">return</span> sf</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rezoom</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> zoom</span><br><span class="line">    zoom = n</span><br><span class="line">    drawxy()</span><br><span class="line">    draw()</span><br><span class="line"></span><br><span class="line">zoom = eval(input(<span class="string">"zoom = "</span>))</span><br><span class="line">width = <span class="number">1280</span></span><br><span class="line">hight = <span class="number">720</span></span><br><span class="line"></span><br><span class="line">turtle.setup(width, hight)</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.delay(<span class="number">0</span>)</span><br><span class="line">turtle.pensize(<span class="number">2</span>)</span><br><span class="line">drawxy()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    express = format(input(<span class="string">"f(x) = "</span>))</span><br><span class="line">    draw()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        i = input(<span class="string">": "</span>)</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">"break"</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                print(eval(i))</span><br><span class="line">            <span class="keyword">except</span> BaseException:</span><br><span class="line">                print(<span class="string">"Input error."</span>)</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>这个程序使用Python 3.x，若需要Python 2.x的程序，请自行修改。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在学校太闲，就写了这个程序，可以绘制函数图像，并且可以绘制其导函数图像和不定积分的图像，效果非常不错。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-8f6ccbeb41b1195b.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python-复平面绘图</title>
    <link href="http://yoursite.com/2018/04/29/Python-%E5%A4%8D%E5%B9%B3%E9%9D%A2%E7%BB%98%E5%9B%BE/"/>
    <id>http://yoursite.com/2018/04/29/Python-复平面绘图/</id>
    <published>2018-04-29T05:59:34.000Z</published>
    <updated>2019-01-25T11:59:35.029Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学校太闲，就写了这个程序，可以在复平面绘制曲线，画圆什么的很轻松，f(z) = e^(1j * z)，螺旋线，函数图象等都可以。  </p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://img-blog.csdn.net/20180429135325750?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hrX3NoYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br><a id="more"></a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>此程序使用turtle绘图，可以用作画函数图像，假设你想画函数g(x)的图像，那么就输入f(z) = z + 1j * g(z)，g(z)是含z的表达式。<br>表达式可支持Python math库，random库，time库的所有函数，具体使用方法请自行探索。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># Python <span class="number">2.</span>x</span><br><span class="line"></span><br><span class="line">import turtle</span><br><span class="line">from <span class="built_in">random</span> import *</span><br><span class="line">from <span class="built_in">math</span> import *</span><br><span class="line">from <span class="built_in">time</span> import *</span><br><span class="line"></span><br><span class="line">def printf(f):</span><br><span class="line">    global z</span><br><span class="line">    turtle.<span class="keyword">goto</span>(f.real * <span class="number">20</span>, f.imag * <span class="number">20</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"f("</span> + str(z) + <span class="string">") = "</span> + str(f))</span><br><span class="line">    z += d</span><br><span class="line"></span><br><span class="line">def <span class="built_in">format</span>(s):</span><br><span class="line">    s = s.replace(<span class="string">"^"</span>,<span class="string">"**"</span>)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">def evale(s):</span><br><span class="line">    n = eval(s)</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line">delay = <span class="built_in">input</span>(<span class="string">"delay = "</span>) * <span class="number">1e-3</span></span><br><span class="line">turtle.setup(<span class="number">1280</span>, <span class="number">720</span>)</span><br><span class="line">turtle.speed(<span class="number">10</span>)</span><br><span class="line">turtle.pensize(<span class="number">2</span>)</span><br><span class="line">turtle.<span class="keyword">goto</span>(<span class="number">-640</span>, <span class="number">0</span>)</span><br><span class="line">turtle.<span class="keyword">goto</span>(<span class="number">640</span>, <span class="number">0</span>)</span><br><span class="line">turtle.<span class="keyword">goto</span>(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">turtle.<span class="keyword">goto</span>(<span class="number">0</span>, <span class="number">360</span>)</span><br><span class="line">turtle.<span class="keyword">goto</span>(<span class="number">0</span>, <span class="number">-360</span>)</span><br><span class="line">turtle.<span class="keyword">goto</span>(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    express = <span class="built_in">format</span>(raw_input(<span class="string">"f(z) = "</span>))</span><br><span class="line">    d = <span class="built_in">input</span>(<span class="string">"d = "</span>)</span><br><span class="line">    <span class="built_in">min</span> = <span class="built_in">input</span>(<span class="string">"min = "</span>)</span><br><span class="line">    <span class="built_in">max</span> = <span class="built_in">input</span>(<span class="string">"max = "</span>)</span><br><span class="line">    z = <span class="built_in">min</span></span><br><span class="line">    f = evale(express)</span><br><span class="line">    turtle.pencolor(<span class="built_in">random</span>(), <span class="built_in">random</span>(), <span class="built_in">random</span>())</span><br><span class="line">    turtle.penup()</span><br><span class="line">    printf(f)</span><br><span class="line">    turtle.pendown()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>  z &lt; <span class="built_in">max</span>:</span><br><span class="line">        f = evale(express)</span><br><span class="line">        printf(f)</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>这个程序使用Python 2.x，若需要Python 3.x的程序，请自行修改。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在学校太闲，就写了这个程序，可以在复平面绘制曲线，画圆什么的很轻松，f(z) = e^(1j * z)，螺旋线，函数图象等都可以。  &lt;/p&gt;
&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180429135325750?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hrX3NoYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python-数字黑洞</title>
    <link href="http://yoursite.com/2018/04/21/Python-%E6%95%B0%E5%AD%97%E9%BB%91%E6%B4%9E/"/>
    <id>http://yoursite.com/2018/04/21/Python-数字黑洞/</id>
    <published>2018-04-21T04:36:21.000Z</published>
    <updated>2019-01-24T13:40:16.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>学校熬了两个星期，在校时看到某本数学教材里讲了一个关于数字黑洞的算法，任何一串非负整数，有限的步骤处理后，终将得到123这三个数字。<br>例如：12345，这串数字有2个偶数，3个奇数，共5个数。于是按顺序排列成235，这串数字有1个偶数，2个奇数，共3个数。于是我们得到了123。</p><p>再如：20021025，得到628，得到303，得到123。</p><p>再如：0，得到101，得到123。</p><p>笔者最近正好刚接触了Python语言，于是便产生了用程序来计算的想法。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/15006683-dbc8d7b7e41a9e58.gif?imageMogr2/auto-orient/strip" alt=""><br><a id="more"></a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">number</span> = input(<span class="string">"输入任意的非负整数：a(1) = "</span>)</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">number</span> != <span class="string">"123"</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">a</span> , b =  <span class="number">0</span> , <span class="built_in">len</span>(<span class="built_in">number</span>)</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">number</span>:</span><br><span class="line">        <span class="keyword">a</span> = <span class="keyword">a</span> + (eval(n) % <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">number</span> = str(b - <span class="keyword">a</span>) + str(<span class="keyword">a</span>) + str(b)</span><br><span class="line">    print(<span class="string">"a("</span> + str(i) + <span class="string">") = "</span> + <span class="built_in">number</span> + <span class="string">""</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;学校熬了两个星期，在校时看到某本数学教材里讲了一个关于数字黑洞的算法，任何一串非负整数，有限的步骤处理后，终将得到123这三个数字。&lt;br&gt;例如：12345，这串数字有2个偶数，3个奇数，共5个数。于是按顺序排列成235，这串数字有1个偶数，2个奇数，共3个数。于是我们得到了123。&lt;/p&gt;
&lt;p&gt;再如：20021025，得到628，得到303，得到123。&lt;/p&gt;
&lt;p&gt;再如：0，得到101，得到123。&lt;/p&gt;
&lt;p&gt;笔者最近正好刚接触了Python语言，于是便产生了用程序来计算的想法。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-dbc8d7b7e41a9e58.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>STM32替换Arduino直通车</title>
    <link href="http://yoursite.com/2018/02/12/STM32%E6%9B%BF%E6%8D%A2Arduino%E7%9B%B4%E9%80%9A%E8%BD%A6/"/>
    <id>http://yoursite.com/2018/02/12/STM32替换Arduino直通车/</id>
    <published>2018-02-12T15:58:07.000Z</published>
    <updated>2019-01-24T13:40:16.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言（废话较多，可直接滚动到教程）"><a href="#前言（废话较多，可直接滚动到教程）" class="headerlink" title="前言（废话较多，可直接滚动到教程）"></a>前言（废话较多，可直接滚动到教程）</h2><p>众所周知，用Arduino进行开发简单快捷，一个项目能很快的做好，而Arduino相比STM32，贵且性价比也很低，Arduino Uno可用的针脚也少得可怜，怎么办？？换做STM32吧！STM32高性能，STM32的最小系统版价格很低，对我这种穷学生来说是福利啊！于是我兴致勃勃的淘了STM32的最小系统版准备入坑STM32。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-08ef48344e09a736.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a><br>可接下来我就要下载各种各样的软件进行编程，烧录，写个最简单的Blink程序都非常麻烦，折腾我一天。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-90af07d226e0d095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>要是能像Arduino一样简单方便快捷就好了，怎么办呢？那么现在正式开始教程！  </p><h2 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h2><p>1，STM32最小系统板，配套数据线，20元以下的就可以了。<br>2，Arduino（不是必须，但如果你不想买USB转TTL就可以把Arduino用作USB转TTL）或者USB转TTL模块一个。<br>3，跳线数根。  </p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="1，配置Arduino并下载所需的文件"><a href="#1，配置Arduino并下载所需的文件" class="headerlink" title="1，配置Arduino并下载所需的文件"></a>1，配置Arduino并下载所需的文件</h3><p>首先我们下载这个人开源的Arduino-STM32项目<br><img src="https://upload-images.jianshu.io/upload_images/15006683-eebc180cac4d8066.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>下载下来并解压<br><img src="https://upload-images.jianshu.io/upload_images/15006683-8df6d84537ed41c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>Arduino快捷方式右键打开文件所在位置，将解压下来的文件移动到如下图所示目录，并将文件夹改名为STM32<br><img src="https://upload-images.jianshu.io/upload_images/15006683-59c9b5ed5b7acc27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>接下来是重点，打开Arduino，进入开发板管理器，安装如下图所示的开发板文件<br><img src="https://upload-images.jianshu.io/upload_images/15006683-de7222d4fa3bc650.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/15006683-0f7d390f4b22b482.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>安装完后选择你的STM32开发板型号<br><img src="https://upload-images.jianshu.io/upload_images/15006683-0487962eeac2a791.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>Arduino新建一个空文件，点击左上角的验证按钮，看看能不能编译，如果可以就继续<br><img src="https://upload-images.jianshu.io/upload_images/15006683-4df590b716e233eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="2，为STM32下载和烧写Bootloader"><a href="#2，为STM32下载和烧写Bootloader" class="headerlink" title="2，为STM32下载和烧写Bootloader"></a>2，为STM32下载和烧写Bootloader</h3><p>接下来我们需要用USB转TTL给STM32烧录Bootloader，首先我们要下载Bootloader，进入刚刚那个人的另一个开源项目，这个地址：<br><a href="https://github.com/rogerclarkmelbourne/STM32duino-bootloader/tree/master/binaries" target="_blank" rel="noopener">https://github.com/rogerclarkmelbourne/STM32duino-bootloader/tree/master/binaries</a><br>选择你的STM32最小系统板的D2所对应的接口名字的文件下载（一定要选择对应的）<br>比如我这里找到开发板的原理图，D1是通电后的指示灯，D2是另外的LED灯，它连接了PC13针脚<br><img src="https://upload-images.jianshu.io/upload_images/15006683-e0e3ffe5c959624a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>那么我就选择这个文件下载<br><img src="https://upload-images.jianshu.io/upload_images/15006683-d13871ad64bf3250.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>下载完成后，我们要烧录这个文件到STM32里，我们先下载所需要的软件，叫做FlyMcu<br>下载地址：<a href="https://pan.baidu.com/s/1bqkVY6j" target="_blank" rel="noopener">https://pan.baidu.com/s/1bqkVY6j</a><br>密码：vygm<br><img src="https://upload-images.jianshu.io/upload_images/15006683-00467b350612f9bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后，这里我用Arduino代替USB转TTL进行烧录，降低额外的成本。  </p><p>需要注意的是，STM32的BOOT0要接上VCC高电平，BOOT1要接上GND低电平，然后按STM32版上的REST按钮使之重启进入ISP下载模式，我们才可以烧录Bootloader进去（重要）。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-a680373ec3c3f9e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后我们还可以看到，PA9是TX，PA10是RX。STM32的TX连接Arduino的RX（0接口），STM32的RX连接Aruidno的TX（1接口）。<br>紧接着，如果要把Arduino用作USB转TTL一定要把Arudino的RST接口一直连接Arduino的GND！Arduino连接电脑，STM32也要供电！<br><img src="https://upload-images.jianshu.io/upload_images/15006683-78c3452612758806.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>OK，恭喜你来到了这一步，接下来我们要用FlyMcu烧录程序，但FlyMcu无法烧录.bin文件（可以打开但无法烧录），这时我们要需要把刚刚下载下来的Bootloader从.bin文件转换成.hex文件进行烧录！<br>所以我们还需要一个软件，来完成这个操作，叫做BinToHex。<br>下载地址：<a href="https://pan.baidu.com/s/1kWkFGgB" target="_blank" rel="noopener">https://pan.baidu.com/s/1kWkFGgB</a><br>密码：ox9g<br><img src="https://upload-images.jianshu.io/upload_images/15006683-25ae5c0b452cba03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>选择我们刚刚下载的bootloader文件，然后选择文件夹导出成.hex文件，随便取个名字。<br><img src="https://upload-images.jianshu.io/upload_images/15006683-57389a2b435039c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>这时我们还需要很重要的一步，将生成的.hex文件用文本编辑器打开，将第一行的:020000040000FA更改成:020000040800F2（非常非常重要）<br><img src="https://upload-images.jianshu.io/upload_images/15006683-0f8610d6e1f24c53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/15006683-94355cdf58d91568.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>紧接着保存退出，我们打开FlyMcu，选择已经修改好的.hex文件，点击开始编程<br><img src="https://upload-images.jianshu.io/upload_images/15006683-dd1ba5306d977c4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>注意，如果长时间无法连接，请按STM32版上的RST按钮或者断电重试！<br>如果烧录Bootloader成功，并且STM32版是通过USB连接电脑供电的话，你的电脑会提示你USB设备异常，这是没用安装正确的驱动造成的，我们打开设备管理器看一下<br><img src="https://upload-images.jianshu.io/upload_images/15006683-d832a1aa59901905.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="3，为电脑安装连接STM32的驱动"><a href="#3，为电脑安装连接STM32的驱动" class="headerlink" title="3，为电脑安装连接STM32的驱动"></a>3，为电脑安装连接STM32的驱动</h3><p>解决这个问题，接下来我们安装驱动程序。<br>进入我们之前下载的文件目录，点击下图所示的.bat文件安装驱动，一定要要管理员身份运行<br><img src="https://upload-images.jianshu.io/upload_images/15006683-c68e816b3d40bbd0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/15006683-e0421ecdcfb0dc99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>success就是成功了，我们按STM32上的RST键，随着电脑的提示音，这时我们再看看设备管理器<br><img src="https://upload-images.jianshu.io/upload_images/15006683-85c75c2afaaa6800.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>我们发现多了一个串口，如果不行就重启电脑试一试。  </p><h3 id="4，用Arduino-IDE为STM32烧录Blink程序"><a href="#4，用Arduino-IDE为STM32烧录Blink程序" class="headerlink" title="4，用Arduino IDE为STM32烧录Blink程序"></a>4，用Arduino IDE为STM32烧录Blink程序</h3><p>最后我们打开Aruidno IDE，选择上传程序的模式，如下图<br><img src="https://upload-images.jianshu.io/upload_images/15006683-9b9f5263486178d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后写入一个Blink程序<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="built_in">setup</span>() &#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(PC14, <span class="literal">OUTPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">loop</span>() &#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(PC14, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(PC14, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/15006683-5861edc20fbd6da0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>随着红色的“Done！”和电脑一声USB提示，STM32自动重启，然后连接在STM32PC14接口上的LED开始闪烁了！<br><img src="https://upload-images.jianshu.io/upload_images/15006683-708e4bdab51f33e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>以后我们不需要额外的硬件，直接用数据线连接STM32最小系统版和电脑，并打开Arduino IDE就可以像玩Arduino一样简单方便快捷了！  </p><h4 id="教程结束，如果博文有错误或者有疑问，欢迎评论来告诉我，谢谢！"><a href="#教程结束，如果博文有错误或者有疑问，欢迎评论来告诉我，谢谢！" class="headerlink" title="教程结束，如果博文有错误或者有疑问，欢迎评论来告诉我，谢谢！"></a>教程结束，如果博文有错误或者有疑问，欢迎评论来告诉我，谢谢！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言（废话较多，可直接滚动到教程）&quot;&gt;&lt;a href=&quot;#前言（废话较多，可直接滚动到教程）&quot; class=&quot;headerlink&quot; title=&quot;前言（废话较多，可直接滚动到教程）&quot;&gt;&lt;/a&gt;前言（废话较多，可直接滚动到教程）&lt;/h2&gt;&lt;p&gt;众所周知，用Arduino进行开发简单快捷，一个项目能很快的做好，而Arduino相比STM32，贵且性价比也很低，Arduino Uno可用的针脚也少得可怜，怎么办？？换做STM32吧！STM32高性能，STM32的最小系统版价格很低，对我这种穷学生来说是福利啊！于是我兴致勃勃的淘了STM32的最小系统版准备入坑STM32。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-08ef48344e09a736.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="硬件开发" scheme="http://yoursite.com/tags/%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
      <category term="Arduino" scheme="http://yoursite.com/tags/Arduino/"/>
    
      <category term="STM32" scheme="http://yoursite.com/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>Arduino-用声音传感器制作简单的“声纹锁”</title>
    <link href="http://yoursite.com/2018/02/08/Arduino-%E7%94%A8%E5%A3%B0%E9%9F%B3%E4%BC%A0%E6%84%9F%E5%99%A8%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8D%95%E7%9A%84%E2%80%9C%E5%A3%B0%E7%BA%B9%E9%94%81%E2%80%9D/"/>
    <id>http://yoursite.com/2018/02/08/Arduino-用声音传感器制作简单的“声纹锁”/</id>
    <published>2018-02-08T02:54:44.000Z</published>
    <updated>2019-01-24T13:38:38.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前就一直在想如何用Arduino制作一个门锁，简单廉价，又可以很方便的开门，最后想了一个办法，就是使用一个声音传感器，制作一个“声纹锁”，以后没带钥匙，根据设定好的节拍敲门，门就开了，是不是很方便？<br><img src="https://upload-images.jianshu.io/upload_images/15006683-525f08c1c0ed1858.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p><h2 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h2><div class="table-container"><table><thead><tr><th>名称</th><th>数量</th></tr></thead><tbody><tr><td>Arduino UNO</td><td>一个</td></tr><tr><td>声音传感模块</td><td>一个</td></tr><tr><td>舵机或继电器</td><td>一个</td></tr><tr><td>面包版</td><td>一个</td></tr><tr><td>跳线</td><td>数根</td></tr></tbody></table></div><h2 id="“声纹锁”原理"><a href="#“声纹锁”原理" class="headerlink" title="“声纹锁”原理"></a>“声纹锁”原理</h2><p>当声音传感器检测到一次振动后开始计时，接着第二次振动时算出间隔时间，如果间隔时间满足预先设定好的节拍，并且连续正确到节拍结束，就控制继电器或者舵机打开门。  </p><h2 id="关于安全性"><a href="#关于安全性" class="headerlink" title="关于安全性"></a>关于安全性</h2><p>经过我的测试，节拍长度最好大于10个，另外密码容错最好低于400，声音传感器的灵敏度调低点，就非常安全。再这样的情况，就算是你长时间的随机尝试密码，也不会撞对的。并且，市面上基本没人卖声纹锁，别人做梦也想不到开门的方式是敲门敲对节拍的。</p><h2 id="Arduino代码"><a href="#Arduino代码" class="headerlink" title="Arduino代码"></a>Arduino代码</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Servo.h&gt;<span class="comment">//声明调用Servo.h库 </span></span><br><span class="line"></span><br><span class="line">#define THRESHOLD <span class="number">200</span><span class="comment">//密码容错范围</span></span><br><span class="line"></span><br><span class="line">unsigned long t = <span class="number">0</span>;<span class="comment">//基准时间</span></span><br><span class="line">int <span class="type">key</span>[<span class="number">5</span>][<span class="number">9</span>] = &#123;</span><br><span class="line">  &#123;<span class="number">400</span>, <span class="number">991</span>, <span class="number">313</span>, <span class="number">304</span>, <span class="number">343</span>, <span class="number">274</span>, <span class="number">271</span>, <span class="number">272</span>, <span class="number">663</span>&#125;,</span><br><span class="line">  &#123;<span class="number">329</span>, <span class="number">1108</span>, <span class="number">293</span>, <span class="number">272</span>, <span class="number">283</span>, <span class="number">254</span>, <span class="number">254</span>, <span class="number">278</span>, <span class="number">721</span>&#125;,</span><br><span class="line">  &#123;<span class="number">341</span>, <span class="number">1141</span>, <span class="number">295</span>, <span class="number">298</span>, <span class="number">343</span>, <span class="number">244</span>, <span class="number">272</span>, <span class="number">310</span>, <span class="number">741</span>&#125;,</span><br><span class="line">  &#123;<span class="number">352</span>, <span class="number">922</span>, <span class="number">284</span>, <span class="number">290</span>, <span class="number">314</span>, <span class="number">258</span>, <span class="number">256</span>, <span class="number">321</span>, <span class="number">588</span>&#125;,</span><br><span class="line">  &#123;<span class="number">559</span>, <span class="number">1240</span>, <span class="number">415</span>, <span class="number">421</span>, <span class="number">411</span>, <span class="number">401</span>, <span class="number">331</span>, <span class="number">419</span>, <span class="number">938</span>&#125;</span><br><span class="line">&#125;;<span class="comment">//声纹密码，义勇军进行曲前10个词的间隔，除去开始的第一个，含有5个节拍是为了适应不同的情况，让识别率更高</span></span><br><span class="line"></span><br><span class="line">int i = <span class="number">0</span>;<span class="comment">//输入的密码位数</span></span><br><span class="line">Servo servo;<span class="comment">//创建一个舵机对象</span></span><br><span class="line"></span><br><span class="line">void setup()</span><br><span class="line">&#123;</span><br><span class="line">  servo.<span class="section">attach</span>(<span class="number">9</span>);<span class="comment">//将引脚9上的舵机与声明的舵机对象连接起来</span></span><br><span class="line">  t = millis();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop()</span><br><span class="line">&#123;</span><br><span class="line">  int dt = millis() - t;</span><br><span class="line"></span><br><span class="line">  if (dt &gt; <span class="number">2000</span>) &#123;<span class="comment">//如果长时间无响应</span></span><br><span class="line">    t = millis();<span class="comment">//时间复位</span></span><br><span class="line">    i = <span class="number">0</span>;<span class="comment">//密码复位</span></span><br><span class="line">    servo.write(<span class="number">0</span>);<span class="comment">//舵机复位</span></span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (analogRead(A0) &lt; <span class="number">200</span> &amp;&amp; dt &gt; <span class="number">200</span>) &#123;<span class="comment">//检测到声音并且间隔大于200毫秒</span></span><br><span class="line">    t = millis();</span><br><span class="line">    bool b = false;</span><br><span class="line"></span><br><span class="line">    for (int a = <span class="number">0</span>; a &lt; sizeof(<span class="type">key</span>) / sizeof(<span class="type">key</span>[<span class="number">0</span>]); a++) &#123;</span><br><span class="line">      b = (<span class="type">key</span>[a][i - <span class="number">1</span>] - THRESHOLD &lt; dt &amp;&amp; dt &lt; <span class="type">key</span>[a][i - <span class="number">1</span>] + THRESHOLD);</span><br><span class="line">      if (b) break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (i == <span class="number">0</span> || b) &#123;<span class="comment">//判断声音间隔是否落在密码区间</span></span><br><span class="line">      if (++i &gt; sizeof(<span class="type">key</span>[<span class="number">0</span>]) / sizeof(<span class="type">key</span>[<span class="number">0</span>][<span class="number">0</span>])) &#123;<span class="comment">//如果密码输入完成</span></span><br><span class="line">        i = <span class="number">0</span>;<span class="comment">//密码复位</span></span><br><span class="line">        servo.write(<span class="number">180</span>);<span class="comment">//舵机旋转180度</span></span><br><span class="line">      &#125;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span>;<span class="comment">//密码复位</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完善"><a href="#完善" class="headerlink" title="完善"></a>完善</h2><p>使用声音做密钥确实是不错的选择，当然你也可以提高密钥的级别，加以判断响度，音调，节奏等等方面，这样的话，才是真正的声纹锁，绝对是非常安全的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前就一直在想如何用Arduino制作一个门锁，简单廉价，又可以很方便的开门，最后想了一个办法，就是使用一个声音传感器，制作一个“声纹锁”，以后没带钥匙，根据设定好的节拍敲门，门就开了，是不是很方便？&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-525f08c1c0ed1858.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="硬件开发" scheme="http://yoursite.com/tags/%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
      <category term="Arduino" scheme="http://yoursite.com/tags/Arduino/"/>
    
  </entry>
  
  <entry>
    <title>C&amp;C++-数组排序</title>
    <link href="http://yoursite.com/2018/02/08/C&amp;C++-%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/02/08/C&amp;C++-数组排序/</id>
    <published>2018-02-08T02:13:52.000Z</published>
    <updated>2019-01-24T15:32:19.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>笔者在逛GitHub的时候，偶遇一开源项目，其程序可演示多种数组排序算法，于是便对排序算法有一些感兴趣。<br>GitHub地址：<a href="https://github.com/bingmann/sound-of-sorting" target="_blank" rel="noopener">https://github.com/bingmann/sound-of-sorting</a><br>演示视频：<a href="https://www.bilibili.com/video/av685670/" target="_blank" rel="noopener">https://www.bilibili.com/video/av685670/</a><br><img src="https://upload-images.jianshu.io/upload_images/15006683-754ac70199e98b91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p><h2 id="为什么要将进行排序？"><a href="#为什么要将进行排序？" class="headerlink" title="为什么要将进行排序？"></a>为什么要将进行排序？</h2><p>软件中对用户操作习惯的统计，网站中对各种用户数据的排行，这些数据往往是接近随机的，为了方便利用这些数据，所以我们需要将这些数据进行排序。</p><h2 id="如何将数据进行排序？"><a href="#如何将数据进行排序？" class="headerlink" title="如何将数据进行排序？"></a>如何将数据进行排序？</h2><p>将数组排序的方法有非常多，但大部分是大同小异，但经典的排序算法有9种，它们各有利弊，根据数组大小和数组中数据的某些性质选择适当的排序算法。至于这些排序算法的代码网上已经详尽，笔者就不在这里累赘了。</p><h2 id="一个简单的排序算法"><a href="#一个简单的排序算法" class="headerlink" title="一个简单的排序算法"></a>一个简单的排序算法</h2><p>笔者这两天因使用了Visual Studio而接触了一点点C++，于是便使用C++根据自己的思路简单的实现了一个排序算法，此算法类似鸡尾酒排序算法，但却不是，有可能时笔者独创的算法吧。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 500 <span class="comment">//数组中元素的数量</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> swap(<span class="keyword">int</span> *p1, <span class="keyword">int</span> *p2) <span class="comment">//交换数组中的两元素</span></span><br><span class="line">&#123;</span><br><span class="line">true<span class="keyword">int</span> temp = *p1; <span class="comment">//创建变量储存元素p1的指针</span></span><br><span class="line">true*p1 = *p2; <span class="comment">//将元素p1的指针改为元素p2的指针</span></span><br><span class="line">true*p2 = temp; <span class="comment">//将元素p2的指针改为之前存储的元素p1的指针</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line">true<span class="comment">//程序从这里开始运行</span></span><br><span class="line">true<span class="keyword">int</span> <span class="keyword">array</span>[SIZE]; <span class="comment">//创建一个数组</span></span><br><span class="line">trueprintf(<span class="string">"未排序数组：\n\n"</span>);</span><br><span class="line">true<span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++) &#123;</span><br><span class="line">truetrue<span class="comment">//遍历数组中所有元素</span></span><br><span class="line">truetrue<span class="keyword">array</span>[i] = rand(); <span class="comment">//数组中每个元素赋值为一个随机数</span></span><br><span class="line">truetrueprintf(<span class="string">"%d  "</span>, <span class="keyword">array</span>[i]); <span class="comment">//输出还未排序的数组中所有元素</span></span><br><span class="line">true&#125;</span><br><span class="line">trueprintf(<span class="string">"\n\n 按下任意键开始排序"</span>);</span><br><span class="line">truegetchar(); <span class="comment">//等待用户响应</span></span><br><span class="line">truesystem(<span class="string">"cls"</span>); <span class="comment">//清除所有输出结果</span></span><br><span class="line"></span><br><span class="line">true<span class="keyword">int</span> l = <span class="number">-1</span>, u = SIZE - <span class="number">1</span>; <span class="comment">//定义我们需要寻找最值并排序的初始区间[0,SIZE]为全集</span></span><br><span class="line">true<span class="built_in">for</span> (l++; l &lt; u; u--) &#123;</span><br><span class="line">truetrue<span class="comment">//遍历已排序区间[0,l]∪[u,SIZE]的补集（即遍历未排序区间)</span></span><br><span class="line">truetrue<span class="comment">//当l &gt;= u时，区间(l,u)为空集，跳出循环</span></span><br><span class="line">truetrue<span class="keyword">int</span> <span class="built_in">max</span> = <span class="number">0</span>, <span class="built_in">min</span> = <span class="number">0</span>; <span class="comment">//创建用于存储最大值下标和最小值下标的变量</span></span><br><span class="line">truetrue<span class="built_in">for</span> (<span class="keyword">int</span> i = l; i &lt;= u; i++) &#123;</span><br><span class="line">truetruetrue<span class="comment">//遍历数组在未排序区间中的所有元素</span></span><br><span class="line">truetruetrue<span class="built_in">min</span> = <span class="keyword">array</span>[<span class="built_in">min</span>] &gt; <span class="keyword">array</span>[i] ? i : <span class="built_in">min</span>; <span class="comment">//寻找数组在未排序区间中最小值的下标</span></span><br><span class="line">truetruetrue<span class="built_in">max</span> = <span class="keyword">array</span>[<span class="built_in">max</span>] &lt; <span class="keyword">array</span>[i] ? i : <span class="built_in">max</span>; <span class="comment">//寻找数组在未排序区间中最大值的下标</span></span><br><span class="line">truetrue&#125;</span><br><span class="line">truetrueswap(&amp;<span class="keyword">array</span>[l], &amp;<span class="keyword">array</span>[<span class="built_in">min</span>]); <span class="comment">//交换数组在未排序区间中的最小值与数组在未排序区间左端点的值</span></span><br><span class="line">truetrueswap(&amp;<span class="keyword">array</span>[u], &amp;<span class="keyword">array</span>[<span class="built_in">max</span>]); <span class="comment">//交换数组在未排序区间中的最大值与数组在未排序区间右端点的值</span></span><br><span class="line"></span><br><span class="line">truetrueprintf(<span class="string">"数组正在排序：\n\n"</span>);</span><br><span class="line">truetrue<span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++) &#123;</span><br><span class="line">truetruetrueprintf(<span class="string">"%d  "</span>, <span class="keyword">array</span>[i]);</span><br><span class="line">truetrue&#125;</span><br><span class="line">truetruesystem(<span class="string">"cls"</span>); <span class="comment">//清除所有输出结果</span></span><br><span class="line">true&#125;</span><br><span class="line"></span><br><span class="line">trueprintf(<span class="string">"排序后数组：\n\n"</span>);</span><br><span class="line">true<span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++) &#123;</span><br><span class="line">truetrue<span class="comment">//遍历排序完后数组中所有元素</span></span><br><span class="line">truetrueprintf(<span class="string">"%d  "</span>, <span class="keyword">array</span>[i]); <span class="comment">//输出排序后的数组中所有元素</span></span><br><span class="line">true&#125;</span><br><span class="line"></span><br><span class="line">truegetchar(); <span class="comment">//等待用户响应（防止程序自动退出）</span></span><br><span class="line">true<span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="程序运行效果："><a href="#程序运行效果：" class="headerlink" title="程序运行效果："></a>程序运行效果：</h2><p><img src="https://upload-images.jianshu.io/upload_images/15006683-7bf9e29f6a589007.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>此排序算法的基本思路其实就是不断缩小一个寻找最小值和最大值的区间，将最小值和最大值与此区间最右端和最左端的元素交换位置，直到这个区间为空，那么就全部排序完成了。因代码中注释已经足够详细，这里就不累赘了。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;笔者在逛GitHub的时候，偶遇一开源项目，其程序可演示多种数组排序算法，于是便对排序算法有一些感兴趣。&lt;br&gt;GitHub地址：&lt;a href=&quot;https://github.com/bingmann/sound-of-sorting&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/bingmann/sound-of-sorting&lt;/a&gt;&lt;br&gt;演示视频：&lt;a href=&quot;https://www.bilibili.com/video/av685670/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bilibili.com/video/av685670/&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-754ac70199e98b91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="程序&amp;算法" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F-%E7%AE%97%E6%B3%95/"/>
    
      <category term="C/C++" scheme="http://yoursite.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Arduino-U8glib-数字闹钟及温度计（不需时钟模块）</title>
    <link href="http://yoursite.com/2018/02/03/Arduino-U8glib-%E6%95%B0%E5%AD%97%E9%97%B9%E9%92%9F%E5%8F%8A%E6%B8%A9%E5%BA%A6%E8%AE%A1%EF%BC%88%E4%B8%8D%E9%9C%80%E6%97%B6%E9%92%9F%E6%A8%A1%E5%9D%97%EF%BC%89/"/>
    <id>http://yoursite.com/2018/02/03/Arduino-U8glib-数字闹钟及温度计（不需时钟模块）/</id>
    <published>2018-02-03T11:56:24.000Z</published>
    <updated>2019-01-24T13:38:10.393Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近想用Arduino制作一个数字闹钟，但因为没有独立的时钟模块造成时间误差太大让我困扰，但还是想了一个办法，让程序自动校正时间，于是不需要时钟模块，时间也能相当准确，效果如下图：<br><img src="https://upload-images.jianshu.io/upload_images/15006683-1db86f65e917d9db.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p><h2 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h2><div class="table-container"><table><thead><tr><th>名称</th><th>数量</th></tr></thead><tbody><tr><td>Arduino UNO</td><td>一个</td></tr><tr><td>LCD 12864显示屏</td><td>一个</td></tr><tr><td>LM35 热敏电阻</td><td>一个</td></tr><tr><td>3W小喇叭</td><td>一个</td></tr><tr><td>面包版</td><td>一个</td></tr><tr><td>跳线</td><td>数根  </td></tr></tbody></table></div><h2 id="校正时间的方法"><a href="#校正时间的方法" class="headerlink" title="校正时间的方法"></a>校正时间的方法</h2><p>以准确时间为标准，测量一段时间内的误差（比如测量3小时后的误差），计算每秒钟的误差毫秒数，取整后然后每秒进行校正，由于取整，仍然会有误差，再将误差扩大60倍，也就是每分钟的误差，取整后每分钟再进行校正，以此类推，直到你认为精确度足够。  </p><h2 id="Arduino代码"><a href="#Arduino代码" class="headerlink" title="Arduino代码"></a>Arduino代码</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;U8glib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUZZER 10<span class="comment">//喇叭针脚</span></span></span><br><span class="line"></span><br><span class="line">U8GLIB_ST7920_128X64_4X u8g(<span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>);<span class="comment">//配置屏幕针脚</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> base = <span class="number">0</span>, ms = <span class="number">0</span>, s = <span class="number">0</span>, mi = <span class="number">48</span>, hr = <span class="number">19</span>, week = <span class="number">6</span>;<span class="comment">//进行初始化时间</span></span><br><span class="line"><span class="keyword">int</span> nMi = <span class="number">0</span>, nHr = <span class="number">8</span>;<span class="comment">//闹钟时间</span></span><br><span class="line"><span class="keyword">double</span> tem = <span class="number">0</span>;<span class="comment">//温度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">setup</span>() &#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(BUZZER, <span class="literal">OUTPUT</span>);</span><br><span class="line">  u8g.setRot180();<span class="comment">//旋转屏幕180度</span></span><br><span class="line">  base = <span class="built_in">millis</span>();<span class="comment">//初始化基准时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">loop</span>() &#123;</span><br><span class="line">  calc();<span class="comment">//更新时间</span></span><br><span class="line">  func();<span class="comment">//处理函数</span></span><br><span class="line">  u8g.firstPage(); <span class="built_in">do</span> draw(); <span class="built_in">while</span> (u8g.nextPage());<span class="comment">//刷新屏幕</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> func() &#123;</span><br><span class="line">  tem = (<span class="keyword">double</span>)<span class="built_in">analogRead</span>(A0) * (<span class="number">5</span> / <span class="number">10.23</span>);<span class="comment">//读取并计算温度</span></span><br><span class="line">  <span class="built_in">if</span> (hr == nHr &amp;&amp; mi == nMi) &#123;<span class="comment">//播放闹钟1分钟</span></span><br><span class="line">    <span class="built_in">tone</span>(BUZZER, <span class="number">200</span> + ms);<span class="comment">//随毫秒数改变闹钟音调，产生铃声</span></span><br><span class="line">  &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">    <span class="built_in">noTone</span>(BUZZER);<span class="comment">//结束播放铃声</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(BUZZER, <span class="literal">LOW</span>);<span class="comment">//设置为低电平</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> calc() &#123;</span><br><span class="line">  ms = <span class="built_in">millis</span>() - base;</span><br><span class="line">  <span class="built_in">if</span> (ms &gt; <span class="number">999</span>) &#123;</span><br><span class="line">    ms = <span class="number">0</span>;</span><br><span class="line">    base = <span class="built_in">millis</span>() - <span class="number">61</span>; <span class="comment">//用于校正误差,每过1s提前61ms</span></span><br><span class="line">    <span class="built_in">if</span> (++s &gt; <span class="number">59</span>) &#123;</span><br><span class="line">      s = <span class="number">0</span>;</span><br><span class="line">      base = <span class="built_in">millis</span>() + <span class="number">8</span>; <span class="comment">//用于校正误差,每过1min延迟8ms</span></span><br><span class="line">      <span class="built_in">if</span> (++mi &gt; <span class="number">59</span>) &#123;</span><br><span class="line">        mi = <span class="number">0</span>;</span><br><span class="line">        base = <span class="built_in">millis</span>() - <span class="number">38</span>; <span class="comment">//用于校正误差,每过1hour提前38ms</span></span><br><span class="line">        <span class="built_in">if</span> (++hr &gt; <span class="number">23</span>) &#123;</span><br><span class="line">          hr = <span class="number">0</span>;</span><br><span class="line">          base = <span class="built_in">millis</span>() - <span class="number">8</span>; <span class="comment">//用于校正误差,每过1day提前8ms</span></span><br><span class="line">          <span class="built_in">if</span> (++week &gt; <span class="number">6</span>) week = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> draw() &#123;</span><br><span class="line">  <span class="built_in">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; <span class="number">2</span> * s; x++)<span class="comment">//按照秒数绘制宽4个像素的进度条</span></span><br><span class="line">    <span class="built_in">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</span><br><span class="line">      u8g.drawPixel(x + <span class="number">5</span>, y + <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">if</span> (hr &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">    u8g.setPrintPos( <span class="number">8</span>, <span class="number">41</span>);</span><br><span class="line">  &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">    u8g.drawStr(<span class="number">10</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">    u8g.setPrintPos( <span class="number">32</span>, <span class="number">41</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  u8g.<span class="built_in">print</span>(hr);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">if</span> (s % <span class="number">2</span> == <span class="number">0</span>)<span class="comment">//冒号在秒数为偶数时才绘制，达到冒号闪烁的效果</span></span><br><span class="line">    u8g.drawStr( <span class="number">56</span>, <span class="number">37</span>, <span class="string">":"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">if</span> (mi &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">    u8g.setPrintPos( <span class="number">70</span>, <span class="number">41</span>);</span><br><span class="line">  &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">    u8g.drawStr(<span class="number">70</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">    u8g.setPrintPos( <span class="number">94</span>, <span class="number">41</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  u8g.<span class="built_in">print</span>(mi);</span><br><span class="line"></span><br><span class="line">  u8g.setFont(u8g_font_gdb14r);<span class="comment">//设置gdb14像素常用类字体</span></span><br><span class="line">  <span class="built_in">switch</span> (week) &#123;<span class="comment">//绘制星期数到屏幕</span></span><br><span class="line">    <span class="built_in">case</span> <span class="number">0</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Sun"</span>); <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">1</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Mon"</span>); <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">2</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Tue"</span>); <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">3</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Wed"</span>); <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">4</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Thu"</span>); <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">5</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Fri"</span>); <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">default</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Sat"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  u8g.setPrintPos( <span class="number">56</span>, <span class="number">61</span>);<span class="comment">//绘制温度示数到屏幕</span></span><br><span class="line">  u8g.<span class="built_in">print</span>(tem);</span><br><span class="line">  u8g.drawStr(<span class="number">111</span>, <span class="number">61</span>, <span class="string">"C"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可动态调整时间的Arduino代码"><a href="#可动态调整时间的Arduino代码" class="headerlink" title="可动态调整时间的Arduino代码"></a>可动态调整时间的Arduino代码</h2><p>使用一个电位器和一个按钮进行调整时间，电位器选择模式或调整数字，按钮进行选定，具体请从代码中理解。<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;U8glib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUZZER 10<span class="comment">//喇叭针脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YJ 7<span class="comment">//额外的控制硬件</span></span></span><br><span class="line"></span><br><span class="line">U8GLIB_ST7920_128X64_4X u8g(<span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>);<span class="comment">//配置屏幕针脚</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> base = <span class="number">0</span>, ms = <span class="number">0</span>, s = <span class="number">55</span> , mi = <span class="number">59</span>, hr = <span class="number">5</span>, week = <span class="number">6</span>;<span class="comment">//进行初始化时间</span></span><br><span class="line"><span class="keyword">int</span> nMi = <span class="number">0</span>, nHr =  <span class="number">6</span>;<span class="comment">//闹钟时间</span></span><br><span class="line"><span class="keyword">double</span> tem = <span class="number">0</span>;<span class="comment">//温度</span></span><br><span class="line"><span class="keyword">char</span> mode = <span class="number">0</span>;<span class="comment">//模式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">setup</span>() &#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(BUZZER, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(YJ, <span class="literal">OUTPUT</span>);</span><br><span class="line">  u8g.setRot180();<span class="comment">//旋转屏幕180度</span></span><br><span class="line">  base = <span class="built_in">millis</span>();<span class="comment">//初始化基准时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">loop</span>() &#123;</span><br><span class="line">  func();<span class="comment">//处理函数</span></span><br><span class="line">  u8g.firstPage(); <span class="built_in">do</span> draw(); <span class="built_in">while</span> (u8g.nextPage());<span class="comment">//刷新屏幕</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> func() &#123;</span><br><span class="line">  <span class="built_in">if</span> (<span class="built_in">map</span>(<span class="built_in">analogRead</span>(A2), <span class="number">0</span>, <span class="number">1010</span>, <span class="number">0</span>, <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">switch</span> (mode) &#123;</span><br><span class="line">      <span class="built_in">case</span> <span class="number">0</span>: calc(); <span class="built_in">break</span>; <span class="comment">//更新时间</span></span><br><span class="line">      <span class="built_in">case</span> <span class="number">1</span>: hr = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1020</span>, <span class="number">0</span>, <span class="number">23</span>); <span class="built_in">break</span>;<span class="comment">//设置小时</span></span><br><span class="line">      <span class="built_in">case</span> <span class="number">2</span>: mi = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1020</span>, <span class="number">0</span>, <span class="number">59</span>); <span class="built_in">break</span>;<span class="comment">//设置分钟</span></span><br><span class="line">      <span class="built_in">case</span> <span class="number">3</span>: s = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1020</span>, <span class="number">0</span>, <span class="number">59</span>); <span class="built_in">break</span>;<span class="comment">//设置秒</span></span><br><span class="line">      <span class="built_in">case</span> <span class="number">4</span>: week = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1020</span>, <span class="number">0</span>, <span class="number">6</span>); <span class="built_in">break</span>;<span class="comment">//设置星期</span></span><br><span class="line">      <span class="built_in">case</span> <span class="number">5</span>: nHr = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1020</span>, <span class="number">0</span>, <span class="number">23</span>); <span class="built_in">break</span>;<span class="comment">//设置闹钟小时</span></span><br><span class="line">      <span class="built_in">case</span> <span class="number">6</span>: nMi = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1020</span>, <span class="number">0</span>, <span class="number">59</span>); <span class="built_in">break</span>;<span class="comment">//设置闹钟分钟</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">    mode = <span class="built_in">map</span>(<span class="built_in">analogRead</span>(A1), <span class="number">0</span>, <span class="number">1010</span>, <span class="number">0</span>, <span class="number">6</span>);<span class="comment">//读取模式</span></span><br><span class="line">    calc();<span class="comment">//更新时间</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tem = (<span class="keyword">double</span>)<span class="built_in">analogRead</span>(A0) * (<span class="number">5</span> / <span class="number">10.23</span>);<span class="comment">//读取并计算温度</span></span><br><span class="line">  <span class="built_in">if</span> (hr == nHr &amp;&amp; mi == nMi) &#123;<span class="comment">//播放闹钟1分钟</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(YJ, <span class="literal">LOW</span>);</span><br><span class="line">    <span class="built_in">tone</span>(BUZZER, <span class="number">200</span> + ms);<span class="comment">//随毫秒数改变闹钟音调，产生铃声</span></span><br><span class="line">  &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(YJ, <span class="literal">HIGH</span>);</span><br><span class="line">    <span class="built_in">noTone</span>(BUZZER);<span class="comment">//结束播放铃声</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(BUZZER, <span class="literal">LOW</span>);<span class="comment">//设置为低电平</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> calc() &#123;</span><br><span class="line">  ms = <span class="built_in">millis</span>() - base;</span><br><span class="line">  <span class="built_in">if</span> (ms &gt; <span class="number">999</span>) &#123;</span><br><span class="line">    ms = <span class="number">0</span>;</span><br><span class="line">    base = <span class="built_in">millis</span>() - <span class="number">61</span>; <span class="comment">//用于校正误差,每过1s提前61ms</span></span><br><span class="line">    <span class="built_in">if</span> (++s &gt; <span class="number">59</span>) &#123;</span><br><span class="line">      s = <span class="number">0</span>;</span><br><span class="line">      base = <span class="built_in">millis</span>() + <span class="number">8</span>; <span class="comment">//用于校正误差,每过1min延迟8ms</span></span><br><span class="line">      <span class="built_in">if</span> (++mi &gt; <span class="number">59</span>) &#123;</span><br><span class="line">        mi = <span class="number">0</span>;</span><br><span class="line">        base = <span class="built_in">millis</span>() - <span class="number">38</span>; <span class="comment">//用于校正误差,每过1hour提前38ms</span></span><br><span class="line">        <span class="built_in">if</span> (++hr &gt; <span class="number">23</span>) &#123;</span><br><span class="line">          hr = <span class="number">0</span>;</span><br><span class="line">          base = <span class="built_in">millis</span>() - <span class="number">8</span>; <span class="comment">//用于校正误差,每过1day提前8ms</span></span><br><span class="line">          <span class="built_in">if</span> (++week &gt; <span class="number">6</span>) week = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> draw() &#123;</span><br><span class="line">  <span class="built_in">switch</span> (mode) &#123;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">0</span>: &#123;</span><br><span class="line">        <span class="built_in">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; <span class="number">2</span> * s; x++)<span class="comment">//按照秒数绘制宽4个像素的进度条</span></span><br><span class="line">          <span class="built_in">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</span><br><span class="line">            u8g.drawPixel(x + <span class="number">5</span>, y + <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">if</span> (hr &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">          u8g.setPrintPos( <span class="number">8</span>, <span class="number">41</span>);</span><br><span class="line">        &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">          u8g.drawStr(<span class="number">10</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">          u8g.setPrintPos( <span class="number">32</span>, <span class="number">41</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        u8g.<span class="built_in">print</span>(hr);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">if</span> (s % <span class="number">2</span> == <span class="number">0</span>)<span class="comment">//冒号在秒数为偶数时才绘制，达到冒号闪烁的效果</span></span><br><span class="line">          u8g.drawStr( <span class="number">56</span>, <span class="number">37</span>, <span class="string">":"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">if</span> (mi &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">          u8g.setPrintPos( <span class="number">70</span>, <span class="number">41</span>);</span><br><span class="line">        &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">          u8g.drawStr(<span class="number">70</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">          u8g.setPrintPos( <span class="number">94</span>, <span class="number">41</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        u8g.<span class="built_in">print</span>(mi);</span><br><span class="line"></span><br><span class="line">        u8g.setFont(u8g_font_gdb14r);<span class="comment">//设置gdb14像素常用类字体</span></span><br><span class="line">        <span class="built_in">switch</span> (week) &#123;<span class="comment">//绘制星期数到屏幕</span></span><br><span class="line">          <span class="built_in">case</span> <span class="number">0</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Sun"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">1</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Mon"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">2</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Tue"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">3</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Wed"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">4</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Thu"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">5</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Fri"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">default</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Sat"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        u8g.setPrintPos( <span class="number">56</span>, <span class="number">61</span>);<span class="comment">//绘制温度示数到屏幕</span></span><br><span class="line">        u8g.<span class="built_in">print</span>(tem);</span><br><span class="line">        u8g.drawStr(<span class="number">111</span>, <span class="number">61</span>, <span class="string">"C"</span>);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">        u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line">        <span class="built_in">if</span> (hr &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">          u8g.setPrintPos( <span class="number">8</span>, <span class="number">41</span>);</span><br><span class="line">        &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">          u8g.drawStr(<span class="number">10</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">          u8g.setPrintPos( <span class="number">32</span>, <span class="number">41</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        u8g.<span class="built_in">print</span>(hr);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">        u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line">        <span class="built_in">if</span> (mi &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">          u8g.setPrintPos( <span class="number">70</span>, <span class="number">41</span>);</span><br><span class="line">        &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">          u8g.drawStr(<span class="number">70</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">          u8g.setPrintPos( <span class="number">94</span>, <span class="number">41</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        u8g.<span class="built_in">print</span>(mi);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="built_in">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; <span class="number">2</span> * s; x++)<span class="comment">//按照秒数绘制宽4个像素的进度条</span></span><br><span class="line">          <span class="built_in">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</span><br><span class="line">            u8g.drawPixel(x + <span class="number">5</span>, y + <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line">        <span class="built_in">if</span> (s % <span class="number">2</span> == <span class="number">0</span>)<span class="comment">//冒号在秒数为偶数时才绘制，达到冒号闪烁的效果</span></span><br><span class="line">          u8g.drawStr( <span class="number">56</span>, <span class="number">37</span>, <span class="string">":"</span>);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">4</span>: &#123;</span><br><span class="line">        u8g.setFont(u8g_font_gdb14r);<span class="comment">//设置gdb14像素常用类字体</span></span><br><span class="line">        <span class="built_in">switch</span> (week) &#123;<span class="comment">//绘制星期数到屏幕</span></span><br><span class="line">          <span class="built_in">case</span> <span class="number">0</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Sun"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">1</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Mon"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">2</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Tue"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">3</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Wed"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">4</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Thu"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">case</span> <span class="number">5</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Fri"</span>); <span class="built_in">break</span>;</span><br><span class="line">          <span class="built_in">default</span>: u8g.drawStr(<span class="number">6</span>, <span class="number">61</span>, <span class="string">"Sat"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">5</span>: &#123;</span><br><span class="line">        u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line">        <span class="built_in">if</span> (nHr &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">          u8g.setPrintPos( <span class="number">8</span>, <span class="number">41</span>);</span><br><span class="line">        &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">          u8g.drawStr(<span class="number">10</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">          u8g.setPrintPos( <span class="number">32</span>, <span class="number">41</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        u8g.<span class="built_in">print</span>(nHr);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">case</span> <span class="number">6</span>: &#123;</span><br><span class="line">        u8g.setFont(u8g_font_gdb30n);<span class="comment">//设置gdb30像素数字类字体</span></span><br><span class="line">        <span class="built_in">if</span> (nMi &gt; <span class="number">9</span>) &#123;<span class="comment">//如果数字只有一位就添加0在前面</span></span><br><span class="line">          u8g.setPrintPos( <span class="number">70</span>, <span class="number">41</span>);</span><br><span class="line">        &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">          u8g.drawStr(<span class="number">70</span>, <span class="number">41</span>, <span class="string">"0"</span>);</span><br><span class="line">          u8g.setPrintPos( <span class="number">94</span>, <span class="number">41</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        u8g.<span class="built_in">print</span>(nMi);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>不同的机器和环境可能有不同的误差，建议自己进行校正后进行使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近想用Arduino制作一个数字闹钟，但因为没有独立的时钟模块造成时间误差太大让我困扰，但还是想了一个办法，让程序自动校正时间，于是不需要时钟模块，时间也能相当准确，效果如下图：&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15006683-1db86f65e917d9db.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="硬件开发" scheme="http://yoursite.com/tags/%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
      <category term="Arduino" scheme="http://yoursite.com/tags/Arduino/"/>
    
  </entry>
  
</feed>
